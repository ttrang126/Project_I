C51 COMPILER V9.60.7.0   TT                                                                07/13/2023 10:14:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TT
OBJECT MODULE PLACED IN .\Objects\tt.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE tt.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\tt.lst
                    -) TABS(2) OBJECT(.\Objects\tt.obj)

line level    source

   1          #include <REGX51.H>
   2          #include<stdio.h>
   3          
   4           sfr LCD = 0x80;
   5           sbit RS = P0^1;
   6           sbit RW = P0^2;
   7           sbit EN = P0^3;
   8           sbit A = P2^1;
   9           sfr ADC0804_Data = 0x90;
  10          sbit ADC0804_RD = P3^4;
  11          sbit ADC0804_WR = P3^3;
  12          sbit ADC0804_INTR = P3^2;
  13          
  14          unsigned char ADC0804_Read(void)
  15          {
  16   1        unsigned char result;
  17   1        
  18   1        
  19   1        ADC0804_WR = 0;
  20   1        ADC0804_WR = 1;
  21   1        
  22   1        while(ADC0804_INTR);
  23   1        
  24   1        ADC0804_RD = 0;
  25   1        result = ADC0804_Data;
  26   1        ADC0804_RD = 1;
  27   1        
  28   1        
  29   1        return result;
  30   1      }
  31          
  32          float Cal_Temp(unsigned int ADC_Value)
  33          {
  34   1        float Temperature = 0.0;
  35   1        unsigned int frac = 0;
  36   1        unsigned int temp = 0;
  37   1        
  38   1        if (ADC_Value < 29)
  39   1          Temperature = (ADC_Value - 11) / 1.86982;
  40   1        else if ((ADC_Value >= 30) && (ADC_Value < 52))
  41   1          Temperature = (ADC_Value - 30) / 2.24137 + 10;
  42   1        else if ((ADC_Value >= 52) && (ADC_Value < 78))
  43   1          Temperature = (ADC_Value - 52) / 2.59323 + 20;
  44   1        else if ((ADC_Value >= 78) && (ADC_Value < 104))
  45   1          Temperature = (ADC_Value - 78) / 2.57189 + 30;
  46   1        else if ((ADC_Value >= 104) && (ADC_Value < 127))
  47   1          Temperature = (ADC_Value - 104) / 2.33659 + 40;
  48   1        else if ((ADC_Value >= 127) && (ADC_Value < 156))
  49   1          Temperature = (ADC_Value - 127) / 2.91112 + 50;
  50   1        else if ((ADC_Value >= 156) && (ADC_Value < 181))
  51   1          Temperature = (ADC_Value - 156) / 2.50075 + 60;
  52   1        else if ((ADC_Value >= 181) && (ADC_Value < 208))
  53   1          Temperature = (ADC_Value - 181) / 2.63397 + 70;
  54   1        else if ((ADC_Value >= 208) && (ADC_Value < 231))
C51 COMPILER V9.60.7.0   TT                                                                07/13/2023 10:14:00 PAGE 2   

  55   1          Temperature = (ADC_Value - 208) / 2.35803 + 80;
  56   1        
  57   1        else if ((ADC_Value >= 231) && (ADC_Value < 255))
  58   1          Temperature = (ADC_Value - 231) / 2.31705 + 90;
  59   1        
  60   1        temp = (unsigned int)(Temperature * 10);
  61   1        Temperature = (double)temp / 10;
  62   1        frac = temp % 10;
  63   1      
  64   1        if (frac < 3)
  65   1        {
  66   2          Temperature -= (double)(frac) / 10;
  67   2        }
  68   1        else if ((frac >= 3) && (frac <= 7))
  69   1        {
  70   2          Temperature += (5 - (double)frac) / 10;
  71   2        }
  72   1        else
  73   1        {
  74   2          Temperature += (double)(10 - frac) / 10;
  75   2        }
  76   1        
  77   1        return Temperature;
  78   1      }
  79          
  80          void delay(unsigned int ms)
  81          {
  82   1          int i,j;
  83   1          for(i = 0; i < ms; i++)
  84   1          {
  85   2              for(j = 0; j < 123; j++);
  86   2      
  87   2          }
  88   1      }
  89          void sendHigh(unsigned char Data){
  90   1          LCD = LCD & 0x0F; // XOA 4 BIT CA0 VA GIU LAI 4 BIT THAP
  91   1        LCD |= ( Data & 0xF0 );// LAY 4 BIT CAO
  92   1      }
  93          
  94          void sendLow(unsigned char Data)
  95          {
  96   1          LCD = LCD & (0x0F);
  97   1          LCD = LCD | (Data << 4); // LAY 4 BIT THAP CUA DATA
  98   1      }
  99          
 100          void LCD_Enable(void)
 101          {
 102   1          EN = 0; // LCD NHAN DU LIEU
 103   1          delay(3);
 104   1          EN = 1; // LCD NGUNG NHAN DU LIEU
 105   1          delay(1);
 106   1      
 107   1      }
 108          
 109          void sendCMD(unsigned char cmd)
 110          
 111          {
 112   1          RW = 0; // LCD O CHE DO WRITE
 113   1          RS = 0; //LCD GUI LENH
 114   1          
 115   1          sendHigh(cmd);
 116   1          LCD_Enable();
C51 COMPILER V9.60.7.0   TT                                                                07/13/2023 10:14:00 PAGE 3   

 117   1          sendLow(cmd);
 118   1          LCD_Enable();
 119   1      }
 120          
 121          void sendData(unsigned char Data)
 122          {
 123   1          RW = 0; // LCD WRITE
 124   1          RS = 1; // LCD GUI DATA
 125   1      
 126   1          sendHigh(Data);
 127   1          LCD_Enable();
 128   1          sendLow(Data);
 129   1          LCD_Enable();
 130   1      }
 131          
 132          void LCD_Init(void)
 133          {
 134   1          delay(50); // LCD ON
 135   1          sendCMD(0x01); // xoa toan bo noi dung tren LCD 
 136   1          delay(5);
 137   1          sendCMD(0x02); // di chuyen con tro ve phia dau man hinh
 138   1          delay(5);
 139   1          sendCMD(0x28); // Giao tiep 4bit, hien thi 2 dong, kich thuoc 5x7
 140   1          delay(5);
 141   1          sendCMD(0x06); // Tu dong tanwg Cursoe den vi tri tiep thep
 142   1          delay(5);
 143   1          sendCMD(0x0C); // LCD ON Cursor OFF
 144   1          delay(5);
 145   1          sendCMD(0x0E); // LCD ON Cursor ON
 146   1          delay(5);
 147   1          sendCMD(0x80); // di chuyen Cursor ve dau dong 1
 148   1          delay(5);
 149   1      
 150   1      }
 151          
 152          void LCD_clear()
 153           {
 154   1           sendCMD(0x01);
 155   1       }
 156          
 157          void SetCursor(unsigned short x, unsigned short y)
 158          {
 159   1          if(y == 0) 
 160   1          {
 161   2              sendCMD((x & 0x0F) | 0x80);
 162   2          }
 163   1          else if(y == 1)
 164   1              sendCMD((x & 0x0F) | 0xC0); // cursor xuong dong 2
 165   1      }
 166          
 167          void printChar(char c)
 168          {
 169   1          sendData(c);
 170   1      }
 171          
 172          void printString(char *c)
 173          {
 174   1          while(*c)
 175   1          {
 176   2              printChar(*c++);
 177   2          }
 178   1      }
C51 COMPILER V9.60.7.0   TT                                                                07/13/2023 10:14:00 PAGE 4   

 179          
 180          void main()
 181          {
 182   1        unsigned int ADC_Value = 0;
 183   1        double Temperature = 0;
 184   1        unsigned char a[5];
 185   1        LCD_Init(); 
 186   1        printString("Temp");
 187   1      delay(1000);
 188   1      LCD_clear();  
 189   1        while(1)
 190   1        {
 191   2                           //Khoi tao LCD
 192   2          A = 1;
 193   2          ADC_Value = ADC0804_Read();
 194   2          Temperature = Cal_Temp(ADC_Value);
 195   2          sprintf(a, "%3.1f", Temperature);
 196   2          printString("Temp:");
 197   2          printString(a);
 198   2          delay(5000);
 199   2          LCD_clear();
 200   2        
 201   2        }
 202   1         
 203   1      
 204   1      
 205   1      }
 206          
 207          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1241    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
