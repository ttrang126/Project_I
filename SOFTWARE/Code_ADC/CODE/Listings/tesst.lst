C51 COMPILER V9.60.7.0   TESST                                                             07/13/2023 00:30:08 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TESST
OBJECT MODULE PLACED IN .\Objects\tesst.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE tesst.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\tes
                    -st.lst) TABS(2) OBJECT(.\Objects\tesst.obj)

line level    source

   1          #include <REGX51.H>
   2          
   3          
   4           sfr LCD = 0x80;
   5           sbit RS = P0^1;
   6           sbit RW = P0^2;
   7           sbit EN = P0^3;
   8          void delay(unsigned int ms)
   9          {
  10   1          int i,j;
  11   1          for(i = 0; i < ms; i++)
  12   1          {
  13   2              for(j = 0; j < 123; j++);
  14   2      
  15   2          }
  16   1      }
  17          void sendHigh(unsigned char Data){
  18   1          LCD = LCD & 0x0F; // XOA 4 BIT CA0 VA GIU LAI 4 BIT THAP
  19   1        LCD |= ( Data & 0xF0 );// LAY 4 BIT CAO
  20   1      }
  21          
  22          void sendLow(unsigned char Data)
  23          {
  24   1          LCD = LCD & (0x0F);
  25   1          LCD = LCD | (Data << 4); // LAY 4 BIT THAP CUA DATA
  26   1      }
  27          
  28          void LCD_Enable(void)
  29          {
  30   1          EN = 0; // LCD NHAN DU LIEU
  31   1          delay(3);
  32   1          EN = 1; // LCD NGUNG NHAN DU LIEU
  33   1          delay(1);
  34   1      
  35   1      }
  36          
  37          void sendCMD(unsigned char cmd)
  38          
  39          {
  40   1          RW = 0; // LCD O CHE DO WRITE
  41   1          RS = 0; //LCD GUI LENH
  42   1          
  43   1          sendHigh(cmd);
  44   1          LCD_Enable();
  45   1          sendLow(cmd);
  46   1          LCD_Enable();
  47   1      }
  48          
  49          void sendData(unsigned char Data)
  50          {
  51   1          RW = 0; // LCD WRITE
  52   1          RS = 1; // LCD GUI DATA
  53   1      
  54   1          sendHigh(Data);
C51 COMPILER V9.60.7.0   TESST                                                             07/13/2023 00:30:08 PAGE 2   

  55   1          LCD_Enable();
  56   1          sendLow(Data);
  57   1          LCD_Enable();
  58   1      }
  59          
  60          void LCD_Init(void)
  61          {
  62   1          delay(50); // LCD ON
  63   1          sendCMD(0x01); // xoa toan bo noi dung tren LCD 
  64   1          delay(5);
  65   1          sendCMD(0x02); // di chuyen con tro ve phia dau man hinh
  66   1          delay(5);
  67   1          sendCMD(0x28); // Giao tiep 4bit, hien thi 2 dong, kich thuoc 5x7
  68   1          delay(5);
  69   1          sendCMD(0x06); // Tu dong tanwg Cursoe den vi tri tiep thep
  70   1          delay(5);
  71   1          sendCMD(0x0C); // LCD ON Cursor OFF
  72   1          delay(5);
  73   1          sendCMD(0x0E); // LCD ON Cursor ON
  74   1          delay(5);
  75   1          sendCMD(0x80); // di chuyen Cursor ve dau dong 1
  76   1          delay(5);
  77   1      
  78   1      }
  79          
  80          void LCD_clear()
  81           {
  82   1           sendCMD(0x01);
  83   1       }
  84          
  85          void SetCursor(unsigned short x, unsigned short y)
  86          {
  87   1          if(y == 0) 
  88   1          {
  89   2              sendCMD((x & 0x0F) | 0x80);
  90   2          }
  91   1          else if(y == 1)
  92   1              sendCMD((x & 0x0F) | 0xC0); // cursor xuong dong 2
  93   1      }
  94          
  95          void printChar(char c)
  96          {
  97   1          sendData(c);
  98   1      }
  99          
 100          void printString(char *c)
 101          {
 102   1          while(*c)
 103   1          {
 104   2              printChar(*c++);
 105   2          }
 106   1      }
 107          
 108          void main()
 109          {
 110   1        
 111   1        LCD_Init();
 112   1        delay(50);
 113   1        while(1){
 114   2          printString("Xuan_Mai_cute");
 115   2        delay(10000);
 116   2        }
C51 COMPILER V9.60.7.0   TESST                                                             07/13/2023 00:30:08 PAGE 3   

 117   1        
 118   1         
 119   1      
 120   1      
 121   1      }
 122          
 123          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
